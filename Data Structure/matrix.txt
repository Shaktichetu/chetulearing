1. Print the matrix

#include <stdio.h>
 
int main()
{
    int matrix[10][10];
    int i,j,m,n;
     
    printf("Enter number of Rows n Column :");
    scanf("%d%d",&m,&n);
 
    printf("\nEnter matrix elements :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("Enter element [%d,%d] : ",i+1,j+1);
            scanf("%d",&matrix[i][j]);
        }
    }
 
    printf("\nMatrix is :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("%d\t",matrix[i][j]);
        }
        printf("\n");   /*new line after row elements*/
    }
    return 0;   
}

2.Take transpose of a matrix

#include <stdio.h>
 
int main()
{
    int matrix[10][10];
    int i,j,m,n;
     
    printf("Enter number of Rows n Column :");
    scanf("%d%d",&m,&n);
 
    printf("\nEnter matrix elements :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("Enter element [%d,%d] : ",i+1,j+1);
            scanf("%d",&matrix[i][j]);
        }
    }
 
    printf("\nMatrix is :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("%d\t",matrix[i][j]);
        }
        printf("\n");   /*new line after row elements*/
    }

	printf("\nTranspose  is :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("%d\t",matrix[j][i]);
        }
        printf("\n");   /*new line after row elements*/
    }

    return 0;   
}

3. Rotate a matrix 90 degree clockwise.

#include <stdio.h>
 
int main()
{
    int matrix[10][10];
    int i,j,m,n;
     
    printf("Enter number of Rows n Column :");
    scanf("%d%d",&m,&n);
 
    printf("\nEnter matrix elements :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("Enter element [%d,%d] : ",i+1,j+1);
            scanf("%d",&matrix[i][j]);
        }
    }
 
    printf("\nMatrix is :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("%d\t",matrix[i][j]);
        }
        printf("\n");   /*new line after row elements*/
    }

	printf("\nRotate 90 clockwise  is :\n");
    for(j=0;j< n;j++) /**Make the first column to row and so on**/
    {
        for(i=m-1;i>=0;i--)
        {
            printf("%d\t",matrix[i][j]);
        }
        printf("\n");   /*new line after row elements*/
    }
    return 0;   
}

4. Rotate a matrix 90 degree by Anti-Clockwise.

#include <stdio.h>
 
int main()
{
    int matrix[10][10];
    int i,j,m,n;
     
    printf("Enter number of Rows n Column :");
    scanf("%d%d",&m,&n);
 
    printf("\nEnter matrix elements :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("Enter element [%d,%d] : ",i+1,j+1);
            scanf("%d",&matrix[i][j]);
        }
    }
 
    printf("\nMatrix is :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("%d\t",matrix[i][j]);
        }
        printf("\n");   /*new line after row elements*/
    }

	printf("\nRotate 90 Anticlock  is :\n");
    for(j=n-1;j>=0;j--) /**Make the last column to row from last element**/
    {
        for(i=0;i<m;i++)
        {
            printf("%d\t",matrix[i][j]);
        }
        printf("\n");   /*new line after row elements*/
    }
    return 0;   
}

5. Print matrix in Spiral form:-

#include <stdio.h>
void spiralPrint(int m, int n, int a[4][4]);
 
int main()
{
    int matrix[4][4];
    int i,j,m,n;
     
    printf("Enter number of Rows n Column :");
    scanf("%d%d",&m,&n);
 
    printf("\nEnter matrix elements :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("Enter element [%d,%d] : ",i+1,j+1);
            scanf("%d",&matrix[i][j]);
        }
    }
 
    printf("\nMatrix is :\n");
    for(i=0;i< m;i++)
    {
        for(j=0;j< n;j++)
        {
            printf("%d\t",matrix[i][j]);
        }
        printf("\n");   /*new line after row elements*/
    }
	printf("\n The Spiral matrix is: \n ");
    spiralPrint( m, n, matrix);
	return 0;   
}

void spiralPrint(int m, int n, int a[4][4]) 
{ 
    int i, k = 0, l = 0; 
  
    /*  k - starting row index 
        m - ending row index 
        l - starting column index 
        n - ending column index 
        i - iterator 
    */
  
    while (k < m && l < n) { 
        /* Print the first row from the remaining rows */
        for (i = l; i < n; i++) { 
            printf("%d ", a[k][i]); 
        } 
        k++; 
  
        /* Print the last column from the remaining columns */
        for (i = k; i < m; i++) { 
            printf("%d ", a[i][n - 1]); 
        } 
        n--; 
  
        /* Print the last row from the remaining rows */
        if (k < m) { 
            for (i = n - 1; i >= l; i--) { 
                printf("%d ", a[m - 1][i]); 
            } 
            m--; 
        } 
  
        /* Print the first column from the remaining columns */
        if (l < n) { 
            for (i = m - 1; i >= k; i--) { 
                printf("%d ", a[i][l]); 
            } 
            l++; 
        } 
    } 
} 

